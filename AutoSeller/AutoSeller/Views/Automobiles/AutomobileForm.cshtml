@model AutoSeller.ViewModel.AutomobileFormViewModel
@{
    ViewBag.Title = "AutomobileForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Step 1</h1>

@if (Model.Id != 0)
{
    <div style="padding-left:20px">
        <h2>Edit Automobile</h2>
    </div>
}
else
{
    <div style="padding-left:20px">
        <h2>New Automobile</h2>
    </div>
}

@using (Html.BeginForm("Save", "Automobiles"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.AutomobileMakeId)
        @Html.DropDownListFor(m => m.AutomobileMakeId, new SelectList(Model.AutomobileMakes.OrderBy(m => m.Name), "Id", "Name"), "Select Make", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AutomobileMakeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AutomobileModelId)
        @Html.DropDownListFor(m => m.AutomobileModelId, new SelectList(Model.AutomobileModels.OrderBy(m => m.Name), "Id", "Name"), "Select Model", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AutomobileModelId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CountryId)
        @Html.DropDownListFor(m => m.CountryId, new SelectList(Model.Countries.OrderBy(m => m.Name), "Id", "Name"), "Select Country", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CountryId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EngineId)
        @Html.DropDownListFor(m => m.EngineId, new SelectList(Model.Engines.OrderBy(m => m.Name), "Id", "Name"), "Select Engine", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.EngineId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Color)
        @Html.TextBoxFor(m => m.Color, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Color)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Doors)
        @Html.TextBoxFor(m => m.Doors, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Doors)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Transmission)
        @Html.TextBoxFor(m => m.Transmission, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Transmission)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Miles)
        @Html.TextBoxFor(m => m.Miles, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Miles)
    </div>

    if (Model.Details.Any())
    {
        for (int i = 0; i < Model.Details.Count(); i++)
        {
            <div class="form-group">
                @Html.ValueFor(m => Model.Details[i].Name)
                @Html.TextBoxFor(Model => Model.AutomobileDetails[i].DetailValue, new { @class = "form-control" })
            </div>
        }
    }


    //here we will declare all hidden fields
    @Html.HiddenFor(m => m.Id)

    for (int i = 0; i < Model.Details.Count(); i++)
    {
        @Html.HiddenFor(m => m.AutomobileDetails[i].Id)
        @Html.HiddenFor(m => m.AutomobileDetails[i].DetailId)
        @Html.HiddenFor(m => m.AutomobileDetails[i].AutomobileId)
        @Html.HiddenFor(m => m.AutomobileDetails[i].AutomobileId)
    }


    @Html.AntiForgeryToken()
    <p>
        <button type="submit" class="btn btn-primary">Save and Proceed</button>
        @Html.ActionLink("Cancel", "Index", "Automobiles", null, new { @class = "btn btn-primary" })
    </p>

}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
