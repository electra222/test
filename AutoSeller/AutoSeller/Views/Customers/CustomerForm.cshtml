@model AutoSeller.ViewModel.CustomerFormViewModel
@{
    ViewBag.Title = "CustomerForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

<!--when we put the form in using we dispose it, so at the end of the block the code will close the </form>, otherwise it will remains open <form>-->
@using (@Html.BeginForm("Save", "Customers"))
{
    //if we use only ValidationSummary() we will get a list with all errors which are shown,
    //by giving true, we ignore them and write a wanted error text
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => Model.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipType)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthdate)
        @Html.TextBoxFor(m => m.Customer.Birthdate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Birthdate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribed to Newsletter?
            <!--  <input type="checkbox"> Check me out -->
        </label>
    </div>
    <!--   <div class="form-group">
        Html.LabelFor(m => m.Customer.IsSubscribedToNewsLetter)
        Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter, new { class = "form-control" })
    </div>-->

    @Html.HiddenFor(m => m.Customer.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>

}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
